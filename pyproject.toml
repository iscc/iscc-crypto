[project]
name = "iscc-crypto"
version = "0.3.0"
description = "ISCC-CRYPTO - cryptographic operations for the International Standard Content Code"
authors = [{ name = "Titusz", email = "tp@py7.de" }]
requires-python = "~=3.10"
readme = "README.md"
license = "Apache-2.0"
keywords = [
    "iscc",
    "cryptography",
    "EdDSA",
    "jsc",
    "verifiable credentials",
    "content identification",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Security :: Cryptography",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Multimedia :: Video",
]
dependencies = [
    "cryptography",
    "jcs",
    "base58",
    "python-dotenv",
]

[project.urls]
Homepage = "https://iscc.codes"

[dependency-groups]
test = [
    "pytest",
    "bandit",
    "coverage",
    "pytest-cov",
]
dev = [
    "poethepoet",
    "ruff",
    "black",
    "mdformat",
    "mdformat-tables",
    "mdformat_admon",
]
docs = ["mkdocs-material"]

[tool.uv]
default-groups = [
    "test",
    "dev",
    "docs",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100

[tool.ruff.format]
line-ending = "lf"

[tool.black]
line-length = 100
preview = true
enable-unstable-feature = ["string_processing"]
target-version = ['py310']

[tool.poe.tasks]
build-docs = { script = "tests.build_docs:main", help = "Copy README & CHANGELOG to /docs" }
format-code = { cmd = "uv run ruff format", help = "Code style formating with ruff" }
format-markdown = { cmd = "mdformat --wrap 100 --end-of-line lf docs README.md CHANGELOG.md ", help = "Markdown formating with mdformat" }
convert-lf = { script = "tests.lf:convert_lf", help = "Convert line endings to LF"}
run-tests = { cmd = "uv run pytest --cov=iscc_crypto --cov-fail-under=100", help = "Run tests with coverage" }
test-security = { cmd = "uv run bandit -r iscc_crypto -q", help = "Run security check with bandit" }
format = ["format-code", "format-markdown", "convert-lf"]
all = ["build-docs ", "format-code", "format-markdown", "convert-lf", "test-security", "run-tests"]
